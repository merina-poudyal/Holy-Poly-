import boto3
import logging
import json

# Set up logging
logger = logging.getLogger()
logger.setLevel(logging.INFO)

# AWS clients
s3 = boto3.client('s3')
polly = boto3.client('polly')


def lambda_handler(event, context):       
    # Destination bucket name
    destination_bucket = 'merina-destination-bucket'   
    
    #Get bucket and object key 
    source_bucket = event['Records'][0]['s3']['bucket']['name']
    text_file_key = event['Records'][0]['s3']['object']['key']

    #Retrieve text file from S3
    logger.info(f"Retrieving text file from bucket: {source_bucket}, key: {text_file_key}")
    
    response = s3.get_object(Bucket=source_bucket,Key=text_file_key)    
    text = response['Body'].read().decode('utf-8')
    
    #Use Polly for converting text to Speech
    polly_response = polly.synthesize_speech(
        Text=text,
        OutputFormat='mp3', #you may opt for .mp4 , .wav, etc..
        VoiceId='Amy'  # Look for few other options in AWS Polly Documents
    )
    

    #Define destination key for output with same name but with .mp3 extension.
    speech_key = text_file_key.replace('.txt','.mp3')
    
    #Saving audio to destination s3
    logger.info(f"Saving audio to destination bucket: {destination_bucket}, key: {speech_key}")

    #Upload audio stream to destination S3 bucket
    s3.put_object(
        Bucket=destination_bucket,
        Key=speech_key,
        Body=polly_response['AudioStream'].read(),
        ContentType='audio/mpeg'
    )

    logger.info("Audio file uploaded successfully.")

    return {
            'statusCode': 200,
            'body': f"Converted {text_file_key} to {speech_key} and saved to {destination_bucket}"
    }

    